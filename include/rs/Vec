#ifndef RS_VEC_
#define RS_VEC_

#include <rs/Macros>

#include <vector>

namespace rs {

	// class
	class LIBRSEXPORT Vec {
		// public functions
		public:
			Vec(void) {};
			Vec(short);
			Vec(float);
			Vec(float, float);
			Vec(float, float, float);
			Vec(float, float, float, float);
			Vec(const Vec&);
			~Vec(void) {};

			void allocate(int);
			unsigned int size(void) const { return _v.size(); };

			// output
			void print(const char* = "V");
			void print(const char* = "V") const;

			// access operators
			float& operator[](short s)			{ return _v[s]; }
			float  operator[](short s) const	{ return _v[s]; }

		// private data
		private:
			std::vector<float> _v;
	};

} // namespace rs

#endif // RS_VEC_

