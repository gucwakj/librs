#ifndef RSRESEARCH_INTEGRATOR_
#define RSRESEARCH_INTEGRATOR_

#include <vector>

#include <gsl/gsl_errno.h>
#include <gsl/gsl_matrix.h>
#include <gsl/gsl_odeiv2.h>

#include <rs/Vec>

namespace rsResearch {

	// integration struct
	struct Params {
		float w1;
		float w2;
		float a;
		float v;
		float R;
		float phi;
		short num_body;
		short num_legs;
		short num_robots;
		short num_vars;
		short form;
		void *robot;
	};

	// class
	class LIBRSEXPORT Integrator {
		// public functions
		public:
			Integrator(void);
			virtual ~Integrator(void);

			const rs::Vec* runStep(float);
			void setup(int(*)(double, const double*, double*, void*), struct Params*, float = 0.004);
			void turn(float);

		// private data
		private:
			double _time;					// time of integration
			float _delta;					// turn delta
			Params *_params;				// all the parameters
			std::vector<double> _array;		// array of values from cpg integration
			gsl_odeiv2_driver *_driver;		// driver of cpg integration
			gsl_odeiv2_system _system;		// system of ode equations
			rs::Vec _v;						// array of output values
	};

} // namespace rsResearch

#endif // RSRESEARCH_INTEGRATOR_

