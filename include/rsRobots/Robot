#ifndef RSROBOTS_ROBOT_
#define RSROBOTS_ROBOT_

#include <cmath>
#include <string>
#include <vector>

#include <rs/Enum>
#include <rs/Pos>
#include <rs/Quat>
#include <rs/Vec>

namespace rsRobots {

	// class
	class LIBRSEXPORT Robot {
		// public functions
		public:
			Robot(short);
			virtual ~Robot(void);

			float getBodyHeight(void);
			short getForm(void);
			short getID(void);
			std::string getName(void);
			float* getRGB(void);
			const rs::Pos getRobotBodyPosition(short, const rs::Pos&, const rs::Quat&);
			bool getTrace(void);
			float getWheelRadius(void);
			void setID(short);
			void setForm(short);
			void setLED(const rs::Vec&);
			void setName(std::string);
			void setTrace(bool);
			void setWheelRadius(float);

		// virtual functions
		public:
			virtual const rs::Quat getRobotBodyQuaternion(int, float, const rs::Quat&) { return rs::Quat(); };
			virtual float getWheelRatio(int) { return 1; }

		// data
		protected:
			bool _trace;
			float _body_length;
			float _body_height;
			float _body_width;
			float _wheel_depth;
			float _wheel_radius;
			float _rgb[3];
			short _form;
			short _id;
			short _wheels[2];
			std::string _name;
			std::vector<rs::Pos> _offset;
	};

} // namespace rsRobots

#endif // RSROBOTS_ROBOT_

