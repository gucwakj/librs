#ifndef RSROBOTS_ROBOT_
#define RSROBOTS_ROBOT_

#include <cmath>
#include <string>
#include <vector>

#include <rs/Enum>
#include <rs/Pos>
#include <rs/Quat>
#include <rs/Vec>

namespace rsRobots {

	// class
	class LIBRSEXPORT Robot {
		// public functions
		public:
			Robot(int);
			virtual ~Robot(void);

			double getBodyHeight(void);
			int getForm(void);
			int getID(void);
			std::string getName(void);
			double* getRGB(void);
			const rs::Pos getRobotBodyPosition(int, const rs::Pos&, const rs::Quat&);
			bool getTrace(void);
			double getWheelRadius(void);
			void setID(int);
			void setForm(int);
			void setLED(const rs::Vec&);
			void setName(std::string);
			void setTrace(bool);
			void setWheelRadius(double);

		// for inherited classes
		public:
			virtual const rs::Quat getRobotBodyQuaternion(int, double, const rs::Quat&) { return rs::Quat(); };

		// data
		protected:
			bool _trace;
			double _body_length;
			double _body_height;
			double _body_width;
			double _wheel_depth;
			double _wheel_radius;
			double _rgb[3];
			int _form;
			int _id;
			int _wheels[2];
			std::string _name;
			std::vector<rs::Pos> _offset;
	};

} // namespace rsRobots

#endif // RSROBOTS_ROBOT_

