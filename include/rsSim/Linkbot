#ifndef RSSIM_LINKBOT_
#define RSSIM_LINKBOT_

#include <rsRobots/Linkbot>
#include <rsSim/ModularRobot>

namespace rsSim {

	// class
	class LIBRSEXPORT Linkbot : virtual public rsRobots::Linkbot, virtual public ModularRobot {
		// public functions
		public:
			Linkbot(int);
			virtual ~Linkbot(void);

			virtual int addConnector(int, int, int = rs::Right, double = 0, int = 1, int = -1);
			virtual void calculateTrackwidth(void);
			virtual const rs::Pos getCoM(double&);
			const rs::Vec getJoints(void);

		// inherited functions
		protected:
			virtual int build(const rs::Pos&, const rs::Quat&, const rs::Vec&, const rs::Vec&, int);
			virtual int build(const rs::Pos&, const rs::Quat&, const rs::Vec&, dBodyID, int, int, int);
			virtual void simPreCollisionThread(void);
			virtual void simPostCollisionThread(void);

		// private functions
		private:
			void build_body(const rs::Pos&, const rs::Quat&);
			void build_bridge(Connector&);
			void build_cap(int, const rs::Pos&, const rs::Quat&);
			void build_caster(Connector&, int);
			void build_cube(Connector&);
			void build_doublebridge(Connector&);
			void build_faceplate(Connector&);
			void build_gripper(Connector&, int);
			void build_omnidrive(Connector&);
			void build_robot(const rs::Pos&, const rs::Quat&, const rs::Vec&);
			void build_simple(Connector&);
			void build_wheel(Connector&, double);
			double calculate_angle(int);
	};

} // namespace rsSim

#endif // RSSIM_LINKBOT_

