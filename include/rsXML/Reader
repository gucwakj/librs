#ifndef RSXML_READER_
#define RSXML_READER_

#include <string>
#include <vector>

#include <tinyxml2.h>

#include <rsXML/Marker>
#include <rsXML/Obstacle>
#include <rsXML/Robot>

namespace rsXML {

	// class
	class Reader {
		// public functions
		public:
			Reader(const char*, bool process = true);
			virtual ~Reader(void);

			int addNewRobot(Robot*);
			std::string getBackgroundImage(int);
			int getLevel(void);
			Obstacle* getObstacle(int);
			Marker* getMarker(int);
			Marker* getNextMarker(int = -1);
			Obstacle* getNextObstacle(int = -1);
			Robot* getNextRobot(int);
			std::vector<double> getFriction(void);
			std::vector<double> getGrid(void);
			std::vector<double> getRestitution(void);
			std::string getDoc(void);
			int getNumObstacles(void);
			int getNumMarkers(void);
			int getNumRobots(void);
			bool getPause(void);
			bool getRealTime(void);
			bool getTrace(void);
			bool getUnits(void);

		// private functions
		private:
			void load_file(const char*, tinyxml2::XMLDocument*);
			std::string load_background_file(const char*, tinyxml2::XMLDocument*);
			void read_config(tinyxml2::XMLDocument*);
			void read_graphics(tinyxml2::XMLDocument*);
			void read_obstacles(tinyxml2::XMLDocument*);
			void read_sim(tinyxml2::XMLDocument*, bool process);

		// private data
		private:
			bool _pause;						// flag: start in a paused state
			bool _preconfig;					// flag: preconfigured robot shape
			bool _trace;						// flag: trace robot positions
			bool _rt;							// flag: real time motion
			bool _units;						// flag: SI (true) or customary (false)
			int _version;						// version of xml file being read
			std::string _path;					// path of xml file
			std::vector<double> _friction;		// coefficient of friction [body/ground, body/body]
			std::vector<double> _grid;			// grid [tics, hash, minx, maxx, miny, maxy, enabled]
			std::vector<double> _restitution;	// coefficient of restitution [body/ground, body/body]
			std::vector<Obstacle*> _obstacle;	// ground obstacles
			std::vector<Marker*> _marker;		// graphical markers
			std::vector<Robot*> _robot;			// simulation robots

			std::string _name;
			int _level;
			std::vector<std::string> _bpath;
	};

	std::string getDefaultPath(void);
	std::string getDefaultTexturePath(void);

} // namespace rsXML

#endif // RSXML_READER_

